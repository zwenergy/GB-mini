.program hale_latch


.wrap_target
waitHALE:
// Wait for HALE to go high.
wait 1 gpio 11

// Make sure no glitch.
jmp pin latchAddr

// ...was glitch.
jmp waitHALE

latchAddr:
// Latch address.
in pins, 10

// Padd.
in null, 22

// Push it.
push

// Wait till HALE goes down again.
wait 0 gpio 11

.wrap


% c-sdk {
static inline void hale_latch_program_init(PIO pio, uint sm, uint offset, uint addrPin, uint halePin ) {

  pio_sm_config c = hale_latch_program_get_default_config( offset );
  // Set address to read.
  pio_sm_set_consecutive_pindirs(pio, sm, addrPin, 10, false);
  // Set HALE to read.
  pio_sm_set_consecutive_pindirs(pio, sm, halePin, 1, false);
  
  // Set IN pins
  sm_config_set_in_pins( &c, addrPin );
  sm_config_set_in_pin_count( &c, 10 );
  
  // Set jmp pin.
  sm_config_set_jmp_pin( &c, halePin );
  

  pio_sm_init( pio, sm, offset, &c );
  pio_sm_set_enabled( pio, sm, true );
}

%}
